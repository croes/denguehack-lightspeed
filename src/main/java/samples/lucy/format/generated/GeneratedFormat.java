/*
 *
 * Copyright (c) 1999-2016 Luciad All Rights Reserved.
 *
 * Luciad grants you ("Licensee") a non-exclusive, royalty free, license to use,
 * modify and redistribute this software in source and binary code form,
 * provided that i) this copyright notice and license appear on all copies of
 * the software; and ii) Licensee does not utilize the software in a manner
 * which is disparaging to Luciad.
 *
 * This software is provided "AS IS," without a warranty of any kind. ALL
 * EXPRESS OR IMPLIED CONDITIONS, REPRESENTATIONS AND WARRANTIES, INCLUDING ANY
 * IMPLIED WARRANTY OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR
 * NON-INFRINGEMENT, ARE HEREBY EXCLUDED. LUCIAD AND ITS LICENSORS SHALL NOT BE
 * LIABLE FOR ANY DAMAGES SUFFERED BY LICENSEE AS A RESULT OF USING, MODIFYING
 * OR DISTRIBUTING THE SOFTWARE OR ITS DERIVATIVES. IN NO EVENT WILL LUCIAD OR ITS
 * LICENSORS BE LIABLE FOR ANY LOST REVENUE, PROFIT OR DATA, OR FOR DIRECT,
 * INDIRECT, SPECIAL, CONSEQUENTIAL, INCIDENTAL OR PUNITIVE DAMAGES, HOWEVER
 * CAUSED AND REGARDLESS OF THE THEORY OF LIABILITY, ARISING OUT OF THE USE OF
 * OR INABILITY TO USE SOFTWARE, EVEN IF LUCIAD HAS BEEN ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGES.
 */
package samples.lucy.format.generated;

import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;

import com.luciad.lucy.ILcyLucyEnv;
import com.luciad.lucy.format.ALcyGeneralFormat;
import com.luciad.lucy.map.ILcyGXYLayerTypeProvider;
import com.luciad.lucy.model.ALcyFileTypeDescriptor;
import com.luciad.lucy.model.ILcyModelContentTypeProvider;
import com.luciad.lucy.util.properties.ALcyProperties;
import com.luciad.lucy.workspace.ALcyWorkspaceCodec;
import com.luciad.lucy.workspace.ALcyWorkspaceObjectCodec;
import com.luciad.model.ILcdModel;
import com.luciad.model.ILcdModelDecoder;
import com.luciad.view.gxy.ILcdGXYLayerFactory;

import samples.lucy.format.generated.lightspeed.GeneratedLspFormatAddOn;

/**
 * A format that represents generated data.
 *
 * It does not provide any GXY-based visualization, only Lightspeed views are supported, by
 * {@link GeneratedLspFormatAddOn}.
 *
 * It does not provide any model decoders and encoders, as the models are generated by the application, see
 * {@link GeneratedFormatAddOn#generateModel()}.
 *
 * It does offer workspace support: when a workspace is decoded, the data is re-created.
 */
class GeneratedFormat extends ALcyGeneralFormat {

  public GeneratedFormat(ILcyLucyEnv aLucyEnv, String aLongPrefix, String aShortPrefix, ALcyProperties aProperties) {
    super(aLucyEnv, aLongPrefix, aShortPrefix, aProperties);
  }

  @Override
  public boolean isModelOfFormat(ILcdModel aModel) {
    return GeneratedFormatAddOn.isGeneratedModel(aModel);
  }

  @Override
  protected ILcyModelContentTypeProvider createModelContentTypeProvider() {
    return new ILcyModelContentTypeProvider() {
      @Override
      public int getModelContentType(ILcdModel aModel) {
        return POINT;
      }
    };
  }

  @Override
  protected ILcdModelDecoder[] createModelDecoders() {
    // We don't need model decoders as the data is generated programmatically
    return new ILcdModelDecoder[0];
  }

  @Override
  protected ALcyFileTypeDescriptor[] createModelDecoderFileTypeDescriptors() {
    return new ALcyFileTypeDescriptor[0];
  }

  @Override
  protected ILcyGXYLayerTypeProvider createGXYLayerTypeProvider() {
    // We're not using the GXY concepts in this sample, as we only use Lightspeed views.
    return null;
  }

  @Override
  protected ILcdGXYLayerFactory createGXYLayerFactory() {
    // We're not using the GXY concepts in this sample, as we only use Lightspeed views.
    return null;
  }

  @Override
  protected ALcyWorkspaceObjectCodec[] createModelWorkspaceCodecs() {
    return new ALcyWorkspaceObjectCodec[]{new ALcyWorkspaceObjectCodec() {
      @Override
      public String getUID() {
        return getLongPrefix() + "generatedModelWorkspaceCodec";
      }

      @Override
      public boolean canEncodeObject(ALcyWorkspaceCodec aWSCodec, Object aObject, Object aParent) {
        return true; //always true, we're protected by a safeguard wrapper that will test it for us
      }

      @Override
      public void encodeObject(ALcyWorkspaceCodec aWSCodec, Object aObject, Object aParent, OutputStream aOut) throws IOException {
        // There is no state to encode as the model is simply created programmatically
      }

      @Override
      public Object createObject(ALcyWorkspaceCodec aWSCodec, Object aParent, InputStream aIn) throws IOException {
        return GeneratedFormatAddOn.generateModel();
      }

      @Override
      public void decodeObject(ALcyWorkspaceCodec aWSCodec, Object aObject, Object aParent, InputStream aIn) throws IOException {
      }
    }};
  }
}
